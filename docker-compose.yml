version: "2.4"

services:
  db:
    image: postgres
    volumes:
      - ./${DB_DIR-db-data}:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=registry
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  registry:
    image: dockerhub/sunbird-rc-core:${RELEASE_VERSION}
    volumes:
      - ${PWD}/${SCHEMA_DIR-java/registry/src/main/resources/public/_schemas}:/home/sunbirdrc/config/public/_schemas
    environment:
      - connectionInfo_uri=jdbc:postgresql://db:5432/registry
      - connectionInfo_username=postgres
      - connectionInfo_password=postgres
      - search_providerName=${SEARCH_PROVIDER_NAME-dev.sunbirdrc.registry.service.NativeSearchService}
      - claims_url=http://claim-ms:8082
      - sign_url=http://certificate-signer:8079/sign
      - sign_health_check_url=http://certificate-signer:8079/health
      - signature_enabled=true
      - pdf_url=http://certificate-api:8078/api/v1/certificatePDF
      - certificate_health_check_url=http://certificate-api:8078/health
      - template_base_url=http://registry:8081/api/v1/templates/ #Looks for certificate templates for pdf copy of the signed certificate
      - filestorage_connection_url=http://file-storage:9000
      - filestorage_access_key=admin
      - filestorage_secret_key=12345678
      - filestorage_bucket_key=issuance
      - registry_base_apis_enable=false
      - logging.level.root=DEBUG
      - enable_external_templates=true
      - async_enabled=false
      - authentication_enabled=false
      - redis_host=redis
      - redis_port=6379
      - manager_type=${MANAGER_TYPE-DefinitionsManager}
    ports:
      - "8081:8081"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget -nv -t1 --spider http://localhost:8081/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 4
  claim-ms:
    image: dockerhub/sunbird-rc-claim-ms:${RELEASE_VERSION}
    environment:
      - connectionInfo_uri=jdbc:postgresql://db:5432/registry
      - connectionInfo_username=postgres
      - connectionInfo_password=postgres
      - sunbirdrc_url=http://registry:8081
    ports:
      - "8082:8082"
    depends_on:
      db:
        condition: service_started
      registry:
        condition: service_started
    healthcheck:
      test: [ "CMD-SHELL", "wget -nv -t1 --spider http://localhost:8082/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 4
  certificate-signer:
    image: dockerhub/sunbird-rc-certificate-signer:${RELEASE_VERSION}
    environment:
      - PORT=8079
    ports:
      - "8079:8079"
    volumes:
      - ./imports:/etc/signer
    healthcheck:
      test:
        [ "CMD-SHELL", "curl -f http://localhost:8079/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
  certificate-api:
    image: dockerhub/sunbird-rc-certificate-api:${RELEASE_VERSION}
    environment:
      - PORT=8078
    ports:
      - "8078:8078"
    healthcheck:
      test:
        [ "CMD-SHELL", "wget -nv -t1 --spider http://localhost:8078/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
  file-storage:
    image: quay.io/minio/minio
    volumes:
      - ${HOME}/minio/data:/data
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=12345678
    command: server --address 0.0.0.0:9000 --console-address 0.0.0.0:9001 /data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
  public-key-service:
    image: dockerhub/sunbird-rc-public-key-service
    environment:
      - CONFIG_BASE_PATH=/etc/keys
    ports:
      - "3300:3300"
    healthcheck:
      test: [ "CMD", "curl", "-f", "localhost:3300/public-key-service/api/v1/health" ]
      interval: 30s
      timeout: 10s
      retries: 4
    volumes:
      - ./imports:/etc/keys
  context-proxy-service:
    image: dockerhub/sunbird-rc-context-proxy-service
    ports:
      - "4400:4400"
    healthcheck:
      test: [ "CMD", "curl", "-f", "localhost:4400/health" ]
      interval: 30s
      timeout: 10s
      retries: 4
  nginx:
    image: dockerhub/sunbird-rc-nginx
    ports:
      - "80:80"
    depends_on:
      registry:
        condition: service_healthy
      context-proxy-service:
        condition: service_started
      public-key-service:
        condition: service_started
      claim-ms:
        condition: service_started
      file-storage:
        condition: service_started
    healthcheck:
      test: [ "CMD", "curl", "-f", "localhost:80" ]
      interval: 30s
      timeout: 10s
      retries: 4
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
